/*! indexedDB 2016-11-22 */
!function(a,b){a.indexedDB=a.indexedDB||a.webkitIndexedDB||a.mozIndexedDB||a.msIndexedDB,a.IDBTransaction=a.IDBTransaction||a.webkitIDBTransaction||a.msIDBTransaction,a.IDBKeyRange=a.IDBKeyRange||a.webkitIDBKeyRange||a.msIDBKeyRange,a.IDBCursor=a.IDBCursor||a.webkitIDBCursor||a.msIDBCursor;var c=function(a,b,c){var d,e,f=[];for(d in c)switch(c[d][1]){case"primary":e=a.createObjectStore(b,{keyPath:c[d][0],autoIncrement:"AI"===c[d][2]});break;case"relation":f.push([c[d][0]+"Index",c[d][2],{unique:!1,multiEntry:!1}]);break;default:f.push([c[d][0]+"Index",c[d][0],{unique:"unique"===c[d][1],multiEntry:"ME"===c[d][2]}])}void 0===e.name&&(e=a.createObjectStore(b,{keyPath:"id",autoIncrement:!0}));for(d in f)e.createIndex(f[d][0],f[d][1],f[d][2])},d=function(b){var c;switch(b[0]){case"gt":c=a.IDBKeyRange.lowerBound(b[1],void 0===b[2]||b[2]);break;case"lt":c=a.IDBKeyRange.upperBound(b[1],void 0===b[2]||b[2]);break;case"bt":c=a.IDBKeyRange.bound(b[1][0],b[1][1],void 0===b[2]||b[2],void 0===b[3]||b[3]);break;case"eq":c=a.IDBKeyRange.only(b[1]);break;case"lk":c=a.IDBKeyRange.includes(b[1]);break;default:c=!1}return c},e=function(a){var b=function(b){f.apply(this,arguments),this.name=a.collectionName,this.database=a.database,this.result=a.DB,delete this.initialCollections};b.prototype={constructor:b,find:function(a,b){"function"==typeof a&&(b=a,a=["*"]);var c=this.database.transaction([this.name],"readonly").objectStore(this.name),e=0,f=[],g="*"===a[0]?null:d(a[1]),h=function(b,c){var d=b.target.result;d?(e++,f.push(d.value),d.continue()):c({error:0,message:"select success of total "+e,data:f,total:e,query:a})};return self.callback=b,c.transaction.onerror=onerror,a[0]===c.keyPath||"*"===a[0]?c.openCursor(g,void 0===a[2]?"prev":a[2]).onsuccess=function(a){h(a,b)}:c.index(a[0]+"Index").openCursor(g,void 0===a[2]?"prev":a[2]).onsuccess=function(a){h(a,b)},this},insert:function(a,b){var c=this.database.transaction([this.name],"readwrite").objectStore(this.name);return c.add(a).onsuccess=function(a){b({error:0,message:"add success!",index:a.target.result})},this},batchInsert:function(a,b){var c=this.database.transaction([this.name],"readwrite").objectStore(this.name),d=null===a||void 0===a?0:a.length;if(0===d)b({error:1,message:"no data!"});else for(var e=0;e<d;e++)c.add(a[e]).onsuccess=function(a){b({error:0,message:"save success!",data:{total:d,index:a.target.result}})};return this},update:function(a,b){var c=this.database.transaction([this.name],"readwrite").objectStore(this.name);return c.put(a).onsuccess=function(a){b({error:0,message:"save success!"})},this},clear:function(a){var b=this.database.transaction([this.name],"readwrite").objectStore(this.name);return b.clear().onsuccess=function(b){a({error:0,message:"clear success!"})},self}},a.DB[a.collectionName]=new b(a.DB.name)},f=function(a,b){"use strict";if(this.name=a,void 0===this.name)throw"name is empty!";this.initialCollections=b?b:{},this.type="indexedDB",this.version=0,this.onopen=null,this.onerror=null};f.prototype={constructor:f,open:function(b){var d=this;if(null===a.indexedDB)return console.log("indexedDB don't support!"),d;var f=a.indexedDB.open(d.name);return f.onupgradeneeded=function(a){for(var b in d.initialCollections)c(a.target.result,b,d.initialCollections[b])},f.onsuccess=function(a){for(var c in d.initialCollections)e({DB:d,collectionName:c,database:a.target.result});b({error:0,message:"open success!",result:d})},d},getCollection:function(a){return this[a]},remove:function(b){return a.indexedDB.deleteDatabase(b||this.name),this}},a[b]=f}(window,"DB");